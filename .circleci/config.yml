# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    - test_go18
  test_go18:
    docker:
      # specify the version
      - image: circleci/golang:1.8

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -race -v ./...

  test_go19:
    docker:
      # specify the version
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -race -v ./...

  test_go110:
    docker:
      # specify the version
      - image: circleci/golang:1.10

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -race -v ./...

  test_go111:
    docker:
      # specify the version
      - image: circleci/golang:1.11

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -race -v ./...

  test_go112:
    docker:
      # specify the version
      - image: circleci/golang:1.12

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -race -v ./...


workflows:
  version: 2
  build_libhoney:
    jobs:
      - test_go18
      - test_go19
      - test_go110
      - test_go111
      - test_go112
